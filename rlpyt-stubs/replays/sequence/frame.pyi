from rlpyt.replays.async_ import AsyncReplayBufferMixin as AsyncReplayBufferMixin
from rlpyt.replays.frame import FrameBufferMixin as FrameBufferMixin
from rlpyt.replays.sequence.n_step import SequenceNStepReturnBuffer as SequenceNStepReturnBuffer
from rlpyt.replays.sequence.prioritized import PrioritizedSequenceReplay as PrioritizedSequenceReplay
from rlpyt.replays.sequence.uniform import UniformSequenceReplay as UniformSequenceReplay
from typing import Any

class SequenceNStepFrameBuffer(FrameBufferMixin, SequenceNStepReturnBuffer):
    def extract_observation(self, T_idxs: Any, B_idxs: Any, T: Any): ...

class UniformSequenceReplayFrameBuffer(UniformSequenceReplay, SequenceNStepFrameBuffer): ...
class PrioritizedSequenceReplayFrameBuffer(PrioritizedSequenceReplay, SequenceNStepFrameBuffer): ...
class AsyncUniformSequenceReplayFrameBuffer(AsyncReplayBufferMixin, UniformSequenceReplayFrameBuffer): ...
class AsyncPrioritizedSequenceReplayFrameBuffer(AsyncReplayBufferMixin, PrioritizedSequenceReplayFrameBuffer): ...
