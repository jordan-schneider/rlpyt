from rlpyt.replays.async_ import AsyncReplayBufferMixin as AsyncReplayBufferMixin
from rlpyt.replays.frame import FrameBufferMixin as FrameBufferMixin
from rlpyt.replays.non_sequence.n_step import NStepReturnBuffer as NStepReturnBuffer
from rlpyt.replays.non_sequence.prioritized import PrioritizedReplay as PrioritizedReplay
from rlpyt.replays.non_sequence.uniform import UniformReplay as UniformReplay
from typing import Any

class NStepFrameBuffer(FrameBufferMixin, NStepReturnBuffer):
    def extract_observation(self, T_idxs: Any, B_idxs: Any): ...

class UniformReplayFrameBuffer(UniformReplay, NStepFrameBuffer): ...
class PrioritizedReplayFrameBuffer(PrioritizedReplay, NStepFrameBuffer): ...
class AsyncUniformReplayFrameBuffer(AsyncReplayBufferMixin, UniformReplayFrameBuffer): ...
class AsyncPrioritizedReplayFrameBuffer(AsyncReplayBufferMixin, PrioritizedReplayFrameBuffer): ...
