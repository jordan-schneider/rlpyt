from rlpyt.algos.utils import discount_return_n_step as discount_return_n_step
from rlpyt.replays.base import BaseReplayBuffer as BaseReplayBuffer
from rlpyt.utils.buffer import buffer_from_example as buffer_from_example, get_leading_dims as get_leading_dims
from typing import Any

class BaseNStepReturnBuffer(BaseReplayBuffer):
    T: Any = ...
    B: Any = ...
    size: Any = ...
    discount: Any = ...
    n_step_return: Any = ...
    t: int = ...
    samples: Any = ...
    samples_return_: Any = ...
    samples_done_n: Any = ...
    off_backward: Any = ...
    off_forward: int = ...
    def __init__(self, example: Any, size: Any, B: Any, discount: int = ..., n_step_return: int = ...) -> None: ...
    def append_samples(self, samples: Any): ...
    def compute_returns(self, T: Any) -> None: ...
