from rlpyt.agents.base import AgentInputs as AgentInputs
from rlpyt.samplers.collectors import BaseEvalCollector as BaseEvalCollector, DecorrelatingStartCollector as DecorrelatingStartCollector
from rlpyt.utils.buffer import buffer_from_example as buffer_from_example, buffer_method as buffer_method, numpify_buffer as numpify_buffer, torchify_buffer as torchify_buffer
from typing import Any

class CpuResetCollector(DecorrelatingStartCollector):
    mid_batch_reset: bool = ...
    def collect_batch(self, agent_inputs: Any, traj_infos: Any, itr: Any): ...

class CpuWaitResetCollector(DecorrelatingStartCollector):
    mid_batch_reset: bool = ...
    need_reset: Any = ...
    done: Any = ...
    temp_observation: Any = ...
    def __init__(self, *args: Any, **kwargs: Any) -> None: ...
    def collect_batch(self, agent_inputs: Any, traj_infos: Any, itr: Any): ...
    def reset_if_needed(self, agent_inputs: Any) -> None: ...

class CpuEvalCollector(BaseEvalCollector):
    def collect_evaluation(self, itr: Any) -> None: ...
