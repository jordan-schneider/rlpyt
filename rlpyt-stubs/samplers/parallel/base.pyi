from rlpyt.samplers.base import BaseSampler as BaseSampler
from rlpyt.samplers.buffer import build_samples_buffer as build_samples_buffer
from rlpyt.samplers.parallel.worker import sampling_process as sampling_process
from rlpyt.utils.collections import AttrDict as AttrDict
from rlpyt.utils.logging import logger as logger
from rlpyt.utils.synchronize import drain_queue as drain_queue
from typing import Any, Optional

EVAL_TRAJ_CHECK: float

class ParallelSamplerBase(BaseSampler):
    gpu: bool = ...
    n_worker: Any = ...
    world_size: Any = ...
    rank: Any = ...
    eval_n_envs_per: Any = ...
    eval_n_envs: Any = ...
    eval_max_T: Any = ...
    workers: Any = ...
    def initialize(self, agent: Any, affinity: Any, seed: Any, bootstrap_value: bool = ..., traj_info_kwargs: Optional[Any] = ..., world_size: int = ..., rank: int = ..., worker_process: Optional[Any] = ...): ...
    def obtain_samples(self, itr: Any): ...
    def evaluate_agent(self, itr: Any): ...
    def shutdown(self) -> None: ...
