from rlpyt.samplers.base import BaseSampler as BaseSampler
from rlpyt.samplers.buffer import build_samples_buffer as build_samples_buffer
from rlpyt.samplers.parallel.cpu.collectors import CpuResetCollector as CpuResetCollector
from rlpyt.samplers.serial.collectors import SerialEvalCollector as SerialEvalCollector
from rlpyt.utils.logging import logger as logger
from rlpyt.utils.seed import set_envs_seeds as set_envs_seeds
from typing import Any, Optional

class SerialSampler(BaseSampler):
    def __init__(self, *args: Any, CollectorCls: Any = ..., eval_CollectorCls: Any = ..., **kwargs: Any) -> None: ...
    eval_collector: Any = ...
    agent: Any = ...
    samples_pyt: Any = ...
    samples_np: Any = ...
    collector: Any = ...
    agent_inputs: Any = ...
    traj_infos: Any = ...
    def initialize(self, agent: Any, affinity: Optional[Any] = ..., seed: Optional[Any] = ..., bootstrap_value: bool = ..., traj_info_kwargs: Optional[Any] = ..., rank: int = ..., world_size: int = ...): ...
    def obtain_samples(self, itr: Any): ...
    def evaluate_agent(self, itr: Any): ...
