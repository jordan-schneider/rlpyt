from rlpyt.agents.base import AgentStep as AgentStep
from rlpyt.agents.dqn.dqn_agent import DqnAgent as DqnAgent
from rlpyt.distributions.epsilon_greedy import CategoricalEpsilonGreedy as CategoricalEpsilonGreedy
from rlpyt.utils.buffer import buffer_to as buffer_to
from rlpyt.utils.collections import namedarraytuple as namedarraytuple
from typing import Any, Optional

AgentInfo: Any

class CatDqnAgent(DqnAgent):
    n_atoms: Any = ...
    def __init__(self, n_atoms: int = ..., **kwargs: Any) -> None: ...
    distribution: Any = ...
    def initialize(self, env_spaces: Any, share_memory: bool = ..., global_B: int = ..., env_ranks: Optional[Any] = ...) -> None: ...
    V_min: Any = ...
    V_max: Any = ...
    def give_V_min_max(self, V_min: Any, V_max: Any) -> None: ...
    def step(self, observation: Any, prev_action: Any, prev_reward: Any): ...
