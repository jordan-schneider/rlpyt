from rlpyt.utils.buffer import np_mp_array as np_mp_array
from rlpyt.utils.logging import logger as logger
from rlpyt.utils.quick_args import save__init__args as save__init__args
from typing import Any, Optional

class EpsilonGreedyAgentMixin:
    def __init__(self, eps_init: int = ..., eps_final: float = ..., eps_final_min: Optional[Any] = ..., eps_itr_min: int = ..., eps_itr_max: int = ..., eps_eval: float = ..., *args: Any, **kwargs: Any) -> None: ...
    def collector_initialize(self, global_B: int = ..., env_ranks: Optional[Any] = ...) -> None: ...
    eps_init: Any = ...
    eps_final: Any = ...
    eps_sample: Any = ...
    def make_vec_eps(self, global_B: Any, env_ranks: Any) -> None: ...
    eps_itr_min: Any = ...
    eps_itr_max: Any = ...
    def set_epsilon_itr_min_max(self, eps_itr_min: Any, eps_itr_max: Any) -> None: ...
    def set_sample_epsilon_greedy(self, epsilon: Any) -> None: ...
    def sample_mode(self, itr: Any) -> None: ...
    def eval_mode(self, itr: Any) -> None: ...
