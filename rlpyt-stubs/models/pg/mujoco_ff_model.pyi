import torch
from rlpyt.models.mlp import MlpModel as MlpModel
from rlpyt.models.running_mean_std import RunningMeanStdModel as RunningMeanStdModel
from rlpyt.utils.tensor import infer_leading_dims as infer_leading_dims, restore_leading_dims as restore_leading_dims
from typing import Any, Optional

class MujocoFfModel(torch.nn.Module):
    mu: Any = ...
    v: Any = ...
    log_std: Any = ...
    obs_rms: Any = ...
    norm_obs_clip: Any = ...
    norm_obs_var_clip: Any = ...
    normalize_observation: Any = ...
    def __init__(self, observation_shape: Any, action_size: Any, hidden_sizes: Optional[Any] = ..., hidden_nonlinearity: Any = ..., mu_nonlinearity: Any = ..., init_log_std: float = ..., normalize_observation: bool = ..., norm_obs_clip: int = ..., norm_obs_var_clip: float = ...) -> None: ...
    def forward(self, observation: Any, prev_action: Any, prev_reward: Any): ...
    def update_obs_rms(self, observation: Any) -> None: ...
