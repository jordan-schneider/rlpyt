from rlpyt.utils.buffer import buffer_func as buffer_func, torchify_buffer as torchify_buffer
from rlpyt.utils.collections import namedarraytuple as namedarraytuple
from rlpyt.utils.logging import logger as logger
from rlpyt.utils.misc import extract_sequences as extract_sequences
from typing import Any, Optional

SamplesFromReplay: Any
SamplesFromReplayPC: Any

class UlForRlReplayBuffer:
    replay_T: Any = ...
    validation_t: Any = ...
    def __init__(self, replay_buffer: Any, replay_T: int = ..., validation_split: float = ..., pixel_control_buffer: Optional[Any] = ...) -> None: ...
    def load_replay(self, replay_buffer: Any, pixel_control_buffer: Optional[Any] = ...) -> None: ...
    @property
    def samples(self): ...
    @property
    def samples_frames(self): ...
    def get_examples(self): ...
    def sample_batch(self, batch_B: Any, validation: bool = ...): ...
    def sample_idxs(self, batch_B: Any, validation: bool = ...): ...
    def extract_batch(self, T_idxs: Any, B_idxs: Any): ...
    def extract_observation(self, T_idxs: Any, B_idxs: Any): ...

def buffer_concatenate(buffers: Any, axis: int = ...): ...
