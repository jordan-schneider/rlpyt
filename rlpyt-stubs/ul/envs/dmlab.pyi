from rlpyt.envs.base import Env as Env
from rlpyt.spaces.int_box import IntBox as IntBox
from typing import Any, Optional

class DmlabEnv(Env):
    dmlab_env: Any = ...
    def __init__(self, level: Any, height: int = ..., width: int = ..., action_repeat: int = ..., frame_history: int = ..., renderer: str = ..., fps: Optional[Any] = ..., episode_length_seconds: Optional[Any] = ..., config_kwargs: Optional[Any] = ..., cache_dir: str = ..., gpu_device_index: str = ...) -> None: ...
    def reset(self): ...
    def step(self, action: Any): ...
    def update_obs(self): ...
    def close(self) -> None: ...

class LevelCache:
    def __init__(self, cache_dir: Any) -> None: ...
    def fetch(self, key: Any, pk3_path: Any): ...
    def write(self, key: Any, pk3_path: Any) -> None: ...

DMLAB30: Any
ACTION_MEANINGS: Any
