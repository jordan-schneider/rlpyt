import torch.nn.functional
from rlpyt.models.utils import conv2d_output_shape as conv2d_output_shape
from typing import Any, Optional

class DmlabConv2dModel(torch.nn.Module):
    conv1: Any = ...
    maxpool1: Any = ...
    conv2: Any = ...
    maxpool2: Any = ...
    conv3: Any = ...
    conv4: Any = ...
    skip_connections: Any = ...
    def __init__(self, in_channels: Any, use_fourth_layer: bool = ..., skip_connections: bool = ..., use_maxpool: bool = ...) -> None: ...
    def forward(self, input: Any): ...
    def output_shape(self, h: Any, w: Any, c: Optional[Any] = ...): ...
    def output_size(self, h: Any, w: Any, c: Optional[Any] = ...): ...
