# Stubs for rlpyt.runners.sync_rl (Python 3)
#
# NOTE: This dynamically typed stub was automatically generated by stubgen.

from rlpyt.runners.minibatch_rl import MinibatchRl, MinibatchRlEval
from typing import Any

class SyncRlMixin:
    def startup(self): ...
    affinities: Any = ...
    affinity: Any = ...
    world_size: Any = ...
    rank: int = ...
    par: Any = ...
    seed: Any = ...
    workers: Any = ...
    def launch_workers(self) -> None: ...
    def build_par_objs(self, world_size: Any): ...

class SyncRl(SyncRlMixin, MinibatchRl):
    @property
    def WorkerCls(self): ...
    def store_diagnostics(self, itr: Any, traj_infos: Any, opt_info: Any) -> None: ...

class SyncRlEval(SyncRlMixin, MinibatchRlEval):
    @property
    def WorkerCls(self): ...
    def log_diagnostics(self, *args: Any, **kwargs: Any) -> None: ...

class SyncWorkerMixin:
    def __init__(self, algo: Any, agent: Any, sampler: Any, n_steps: Any, seed: Any, affinity: Any, log_interval_steps: Any, rank: Any, world_size: Any, port: Any, backend: Any, par: Any) -> None: ...
    def startup(self): ...
    def initialize_logging(self) -> None: ...
    def shutdown(self) -> None: ...

class SyncWorker(SyncWorkerMixin, MinibatchRl):
    def store_diagnostics(self, itr: Any, traj_infos: Any, opt_info: Any) -> None: ...
    def log_diagnostics(self, *args: Any, **kwargs: Any) -> None: ...

class SyncWorkerEval(SyncWorkerMixin, MinibatchRlEval):
    def store_diagnostics(self, *args: Any, **kwargs: Any) -> None: ...
    def log_diagnostics(self, *args: Any, **kwargs: Any) -> None: ...
    def evaluate_agent(self, *args: Any, **kwargs: Any): ...
