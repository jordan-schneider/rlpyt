from rlpyt.agents.pg.mujoco import MujocoFfAgent as MujocoFfAgent, MujocoLstmAgent as MujocoLstmAgent
from rlpyt.distributions.gaussian import DistInfoStd as DistInfoStd
from rlpyt.projects.safe.cppo_model import CppoModel as CppoModel
from rlpyt.utils.buffer import buffer_to as buffer_to
from rlpyt.utils.collections import namedarraytuple as namedarraytuple
from typing import Any, Optional

ValueInfo: Any

class CppoAgent(MujocoFfAgent):
    def __init__(self, ModelCls: Any = ..., model_kwargs: Optional[Any] = ..., initial_model_state_dict: Optional[Any] = ...) -> None: ...
    def value(self, observation: Any, prev_action: Any, prev_reward: Any): ...
    def update_obs_rms(self, observation: Any) -> None: ...
    def data_parallel(self, *args: Any, **kwargs: Any): ...

class CppoLstmAgent(MujocoLstmAgent):
    def __init__(self, ModelCls: Any = ..., model_kwargs: Optional[Any] = ..., initial_model_state_dict: Optional[Any] = ...) -> None: ...
    beta_r_model: Any = ...
    beta_c_model: Any = ...
    def initialize(self, *args: Any, **kwargs: Any) -> None: ...
    def to_device(self, cuda_idx: Optional[Any] = ...) -> None: ...
    def value(self, observation: Any, prev_action: Any, prev_reward: Any): ...
    def update_obs_rms(self, observation: Any) -> None: ...
    def data_parallel(self, *args: Any, **kwargs: Any): ...
    def beta_dist_infos(self, observation: Any, prev_action: Any, prev_reward: Any, init_rnn_state: Any): ...
