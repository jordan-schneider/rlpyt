from gym import Wrapper
from rlpyt.envs.gym import GymEnvWrapper as GymEnvWrapper
from rlpyt.samplers.collections import TrajInfo as TrajInfo
from typing import Any, Optional

def sometimes_info(*args: Any, **kwargs: Any): ...

class SafetyGymEnvWrapper(Wrapper):
    observation_space: Any = ...
    def __init__(self, env: Any, sometimes_info_kwargs: Any, obs_prev_cost: Any) -> None: ...
    def step(self, action: Any): ...
    def reset(self): ...
    def observation(self, obs: Any): ...

def infill_info(info: Any, sometimes_info: Any): ...
def safety_gym_make(*args: Any, sometimes_info_kwargs: Optional[Any] = ..., obs_prev_cost: bool = ..., obs_version: str = ..., **kwargs: Any): ...

class SafetyGymTrajInfo(TrajInfo):
    Cost: int = ...
    def __init__(self, **kwargs: Any) -> None: ...
    def step(self, observation: Any, action: Any, reward: Any, done: Any, agent_info: Any, env_info: Any) -> None: ...
    def terminate(self, observation: Any): ...
